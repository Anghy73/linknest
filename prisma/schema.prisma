// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model User {
//   id Int @id @default(autoincrement())
//   username String
//   email String @unique
//   password String
//   role Role @default(USER)
//   links Link[]
//   tags Tags[]
//   createdAt DateTime @default(now())
// }

model Link {
  id Int @id @default(autoincrement())
  // user User @relation(fields: [userId], references: [id])
  // userId Int
  title String
  description String
  logo String
  img String
  url String
  shortUrl String
  comment String
  linkTags LinkTag[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([title])
}

model Tag {
  id Int @id @default(autoincrement())
  value String @unique
  label String
  links LinkTag[]
}
  // @@index([userId, value])
model LinkTag {
  id Int @id @default(autoincrement())
  link Link @relation(fields: [linkId], references: [id])
  linkId Int
  tag Tag @relation(fields: [tagId], references: [id])
  tagId Int
  // user User @relation(fields: [userId], references: [id])
  // userId Int
}

enum Role {
  USER
  ADMIN
}

// model Tags {
//   id Int @id @default(autoincrement())
//   // user User @relation(fields: [userId], references: [id])
//   // userId Int
//   link Link @relation(fields: [linkId], references: [id])
//   linkId Int
//   value String
//   label String
// }



// Tabla de config for user / para guardar config de apariencias.
// Tabla de tags


// model ShortLink {
//   id Int @id @default(autoincrement())
//   url String @unique
//   shortUrl String @unique
//   createdAt DateTime @default(now())
// }
